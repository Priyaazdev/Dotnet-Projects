# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  - main

variables:
  buildConfiguration: "Release"
  vmImageName: windows-latest
  environmentName: "aspnet-core-devops"
  imageName: "neethucleetus/api"
  dockerRegistryServiceConnection: "azure_portal"
  tag: "$(Build.BuildId)"

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Build Stage
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: UseDotNet@2
            displayName: .NET 6 SDK
            inputs:
              packageType: "sdk"
              version: "6.x"
              includePreviewVersions: true

          - task: DotNetCoreCLI@2
            displayName: dotnet Build
            inputs:
              command: build
              projects: "TodoApi/TodoApi.csproj"
              arguments: "--configuration $(buildConfiguration)"
          
          - task: CopyFiles@2
            inputs:
              SourceFolder: $(Build.SourcesDirectory)
              contents: 'Dockerfile'
              targetFolder: $(Build.ArtifactStagingDirectory)/TodoApi
            
          - task: CopyFiles@2
            inputs:
              SourceFolder: $(Build.SourcesDirectory)
              contents: 'azuredotnet.yaml'
              targetFolder: $(Build.ArtifactStagingDirectory)/TodoApi
          
 

          - task: DotNetCoreCLI@2
            displayName: dotnet Publish
            inputs:
              projects: "TodoApi/TodoApi.csproj"
              command: publish
              arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
              zipAfterPublish: false

          - task: PublishBuildArtifacts@1
            displayName: Publish Artifacts
            inputs:
              pathtoPublish: "$(Build.ArtifactStagingDirectory)"
              artifactName: "drop"

          #- task: Docker@2
            #displayName: Build an image
            #inputs:
              #repository: $(imageName)
              #command: build
              #Dockerfile: $(Build.ArtifactStagingDirectory)/build/TodoApi/Dockerfile
              
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageName)
              dockerfile: $(Build.ArtifactStagingDirectory)/TodoApi/Dockerfile
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
          
     
              
          
  
          
        
          
              
